#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pedido
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Banco")]
	public partial class BancoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCidade(Cidade instance);
    partial void UpdateCidade(Cidade instance);
    partial void DeleteCidade(Cidade instance);
    partial void InsertConfiguracao(Configuracao instance);
    partial void UpdateConfiguracao(Configuracao instance);
    partial void DeleteConfiguracao(Configuracao instance);
    partial void InsertCor(Cor instance);
    partial void UpdateCor(Cor instance);
    partial void DeleteCor(Cor instance);
    partial void InsertEstado(Estado instance);
    partial void UpdateEstado(Estado instance);
    partial void DeleteEstado(Estado instance);
    partial void InsertPedido(Pedido instance);
    partial void UpdatePedido(Pedido instance);
    partial void DeletePedido(Pedido instance);
    partial void InsertPedidoProduto(PedidoProduto instance);
    partial void UpdatePedidoProduto(PedidoProduto instance);
    partial void DeletePedidoProduto(PedidoProduto instance);
    partial void InsertPessoa(Pessoa instance);
    partial void UpdatePessoa(Pessoa instance);
    partial void DeletePessoa(Pessoa instance);
    partial void InsertProduto(Produto instance);
    partial void UpdateProduto(Produto instance);
    partial void DeleteProduto(Produto instance);
    partial void InsertProdutoTamanho(ProdutoTamanho instance);
    partial void UpdateProdutoTamanho(ProdutoTamanho instance);
    partial void DeleteProdutoTamanho(ProdutoTamanho instance);
    partial void InsertTamanho(Tamanho instance);
    partial void UpdateTamanho(Tamanho instance);
    partial void DeleteTamanho(Tamanho instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    #endregion
		
		public BancoDataContext() : 
				base(global::Pedido.Properties.Settings.Default.BancoConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BancoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BancoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BancoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BancoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cidade> Cidade
		{
			get
			{
				return this.GetTable<Cidade>();
			}
		}
		
		public System.Data.Linq.Table<Configuracao> Configuracao
		{
			get
			{
				return this.GetTable<Configuracao>();
			}
		}
		
		public System.Data.Linq.Table<Cor> Cor
		{
			get
			{
				return this.GetTable<Cor>();
			}
		}
		
		public System.Data.Linq.Table<Estado> Estado
		{
			get
			{
				return this.GetTable<Estado>();
			}
		}
		
		public System.Data.Linq.Table<Pedido> Pedido
		{
			get
			{
				return this.GetTable<Pedido>();
			}
		}
		
		public System.Data.Linq.Table<PedidoProduto> PedidoProduto
		{
			get
			{
				return this.GetTable<PedidoProduto>();
			}
		}
		
		public System.Data.Linq.Table<Pessoa> Pessoa
		{
			get
			{
				return this.GetTable<Pessoa>();
			}
		}
		
		public System.Data.Linq.Table<Produto> Produto
		{
			get
			{
				return this.GetTable<Produto>();
			}
		}
		
		public System.Data.Linq.Table<ProdutoTamanho> ProdutoTamanho
		{
			get
			{
				return this.GetTable<ProdutoTamanho>();
			}
		}
		
		public System.Data.Linq.Table<Tamanho> Tamanho
		{
			get
			{
				return this.GetTable<Tamanho>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cidade")]
	public partial class Cidade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCidade;
		
		private int _IDEstado;
		
		private string _Nome;
		
		private EntitySet<Pessoa> _Pessoa;
		
		private EntityRef<Estado> _Estado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCidadeChanging(int value);
    partial void OnIDCidadeChanged();
    partial void OnIDEstadoChanging(int value);
    partial void OnIDEstadoChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    #endregion
		
		public Cidade()
		{
			this._Pessoa = new EntitySet<Pessoa>(new Action<Pessoa>(this.attach_Pessoa), new Action<Pessoa>(this.detach_Pessoa));
			this._Estado = default(EntityRef<Estado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCidade", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDCidade
		{
			get
			{
				return this._IDCidade;
			}
			set
			{
				if ((this._IDCidade != value))
				{
					this.OnIDCidadeChanging(value);
					this.SendPropertyChanging();
					this._IDCidade = value;
					this.SendPropertyChanged("IDCidade");
					this.OnIDCidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEstado", DbType="Int NOT NULL")]
		public int IDEstado
		{
			get
			{
				return this._IDEstado;
			}
			set
			{
				if ((this._IDEstado != value))
				{
					if (this._Estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDEstadoChanging(value);
					this.SendPropertyChanging();
					this._IDEstado = value;
					this.SendPropertyChanged("IDEstado");
					this.OnIDEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cidade_Pessoa", Storage="_Pessoa", ThisKey="IDCidade", OtherKey="IDCidade")]
		public EntitySet<Pessoa> Pessoa
		{
			get
			{
				return this._Pessoa;
			}
			set
			{
				this._Pessoa.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Cidade", Storage="_Estado", ThisKey="IDEstado", OtherKey="IDEstado", IsForeignKey=true)]
		public Estado Estado
		{
			get
			{
				return this._Estado.Entity;
			}
			set
			{
				Estado previousValue = this._Estado.Entity;
				if (((previousValue != value) 
							|| (this._Estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado.Entity = null;
						previousValue.Cidade.Remove(this);
					}
					this._Estado.Entity = value;
					if ((value != null))
					{
						value.Cidade.Add(this);
						this._IDEstado = value.IDEstado;
					}
					else
					{
						this._IDEstado = default(int);
					}
					this.SendPropertyChanged("Estado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pessoa(Pessoa entity)
		{
			this.SendPropertyChanging();
			entity.Cidade = this;
		}
		
		private void detach_Pessoa(Pessoa entity)
		{
			this.SendPropertyChanging();
			entity.Cidade = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Configuracao")]
	public partial class Configuracao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDConfiguracao;
		
		private string _CaminhoRelatorios;
		
		private string _CaminhoBackup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDConfiguracaoChanging(int value);
    partial void OnIDConfiguracaoChanged();
    partial void OnCaminhoRelatoriosChanging(string value);
    partial void OnCaminhoRelatoriosChanged();
    partial void OnCaminhoBackupChanging(string value);
    partial void OnCaminhoBackupChanged();
    #endregion
		
		public Configuracao()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDConfiguracao", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDConfiguracao
		{
			get
			{
				return this._IDConfiguracao;
			}
			set
			{
				if ((this._IDConfiguracao != value))
				{
					this.OnIDConfiguracaoChanging(value);
					this.SendPropertyChanging();
					this._IDConfiguracao = value;
					this.SendPropertyChanged("IDConfiguracao");
					this.OnIDConfiguracaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaminhoRelatorios", DbType="VarChar(200)")]
		public string CaminhoRelatorios
		{
			get
			{
				return this._CaminhoRelatorios;
			}
			set
			{
				if ((this._CaminhoRelatorios != value))
				{
					this.OnCaminhoRelatoriosChanging(value);
					this.SendPropertyChanging();
					this._CaminhoRelatorios = value;
					this.SendPropertyChanged("CaminhoRelatorios");
					this.OnCaminhoRelatoriosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaminhoBackup", DbType="VarChar(200)")]
		public string CaminhoBackup
		{
			get
			{
				return this._CaminhoBackup;
			}
			set
			{
				if ((this._CaminhoBackup != value))
				{
					this.OnCaminhoBackupChanging(value);
					this.SendPropertyChanging();
					this._CaminhoBackup = value;
					this.SendPropertyChanged("CaminhoBackup");
					this.OnCaminhoBackupChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cor")]
	public partial class Cor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCor;
		
		private bool _Status;
		
		private string _Descricao;
		
		private EntitySet<PedidoProduto> _PedidoProduto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCorChanging(int value);
    partial void OnIDCorChanged();
    partial void OnStatusChanging(bool value);
    partial void OnStatusChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    #endregion
		
		public Cor()
		{
			this._PedidoProduto = new EntitySet<PedidoProduto>(new Action<PedidoProduto>(this.attach_PedidoProduto), new Action<PedidoProduto>(this.detach_PedidoProduto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDCor
		{
			get
			{
				return this._IDCor;
			}
			set
			{
				if ((this._IDCor != value))
				{
					this.OnIDCorChanging(value);
					this.SendPropertyChanging();
					this._IDCor = value;
					this.SendPropertyChanged("IDCor");
					this.OnIDCorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit NOT NULL")]
		public bool Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cor_PedidoProduto", Storage="_PedidoProduto", ThisKey="IDCor", OtherKey="IDCor")]
		public EntitySet<PedidoProduto> PedidoProduto
		{
			get
			{
				return this._PedidoProduto;
			}
			set
			{
				this._PedidoProduto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PedidoProduto(PedidoProduto entity)
		{
			this.SendPropertyChanging();
			entity.Cor = this;
		}
		
		private void detach_PedidoProduto(PedidoProduto entity)
		{
			this.SendPropertyChanging();
			entity.Cor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estado")]
	public partial class Estado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDEstado;
		
		private string _Nome;
		
		private string _UF;
		
		private EntitySet<Cidade> _Cidade;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDEstadoChanging(int value);
    partial void OnIDEstadoChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnUFChanging(string value);
    partial void OnUFChanged();
    #endregion
		
		public Estado()
		{
			this._Cidade = new EntitySet<Cidade>(new Action<Cidade>(this.attach_Cidade), new Action<Cidade>(this.detach_Cidade));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEstado", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDEstado
		{
			get
			{
				return this._IDEstado;
			}
			set
			{
				if ((this._IDEstado != value))
				{
					this.OnIDEstadoChanging(value);
					this.SendPropertyChanging();
					this._IDEstado = value;
					this.SendPropertyChanged("IDEstado");
					this.OnIDEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UF", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string UF
		{
			get
			{
				return this._UF;
			}
			set
			{
				if ((this._UF != value))
				{
					this.OnUFChanging(value);
					this.SendPropertyChanging();
					this._UF = value;
					this.SendPropertyChanged("UF");
					this.OnUFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Cidade", Storage="_Cidade", ThisKey="IDEstado", OtherKey="IDEstado")]
		public EntitySet<Cidade> Cidade
		{
			get
			{
				return this._Cidade;
			}
			set
			{
				this._Cidade.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cidade(Cidade entity)
		{
			this.SendPropertyChanging();
			entity.Estado = this;
		}
		
		private void detach_Cidade(Cidade entity)
		{
			this.SendPropertyChanging();
			entity.Estado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pedido")]
	public partial class Pedido : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPedido;
		
		private int _IDPessoa;
		
		private int _IDUsuario;
		
		private string _Status;
		
		private System.DateTime _Data;
		
		private decimal _Total;
		
		private string _Observacao;
		
		private EntitySet<PedidoProduto> _PedidoProduto;
		
		private EntityRef<Pessoa> _Pessoa;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPedidoChanging(int value);
    partial void OnIDPedidoChanged();
    partial void OnIDPessoaChanging(int value);
    partial void OnIDPessoaChanged();
    partial void OnIDUsuarioChanging(int value);
    partial void OnIDUsuarioChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    partial void OnTotalChanging(decimal value);
    partial void OnTotalChanged();
    partial void OnObservacaoChanging(string value);
    partial void OnObservacaoChanged();
    #endregion
		
		public Pedido()
		{
			this._PedidoProduto = new EntitySet<PedidoProduto>(new Action<PedidoProduto>(this.attach_PedidoProduto), new Action<PedidoProduto>(this.detach_PedidoProduto));
			this._Pessoa = default(EntityRef<Pessoa>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPedido", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDPedido
		{
			get
			{
				return this._IDPedido;
			}
			set
			{
				if ((this._IDPedido != value))
				{
					this.OnIDPedidoChanging(value);
					this.SendPropertyChanging();
					this._IDPedido = value;
					this.SendPropertyChanged("IDPedido");
					this.OnIDPedidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPessoa", DbType="Int NOT NULL")]
		public int IDPessoa
		{
			get
			{
				return this._IDPessoa;
			}
			set
			{
				if ((this._IDPessoa != value))
				{
					if (this._Pessoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPessoaChanging(value);
					this.SendPropertyChanging();
					this._IDPessoa = value;
					this.SendPropertyChanged("IDPessoa");
					this.OnIDPessoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUsuario", DbType="Int NOT NULL")]
		public int IDUsuario
		{
			get
			{
				return this._IDUsuario;
			}
			set
			{
				if ((this._IDUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IDUsuario = value;
					this.SendPropertyChanged("IDUsuario");
					this.OnIDUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="DateTime NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(18,4) NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Observacao", DbType="VarChar(500)")]
		public string Observacao
		{
			get
			{
				return this._Observacao;
			}
			set
			{
				if ((this._Observacao != value))
				{
					this.OnObservacaoChanging(value);
					this.SendPropertyChanging();
					this._Observacao = value;
					this.SendPropertyChanged("Observacao");
					this.OnObservacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pedido_PedidoProduto", Storage="_PedidoProduto", ThisKey="IDPedido", OtherKey="IDPedido")]
		public EntitySet<PedidoProduto> PedidoProduto
		{
			get
			{
				return this._PedidoProduto;
			}
			set
			{
				this._PedidoProduto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_Pedido", Storage="_Pessoa", ThisKey="IDPessoa", OtherKey="IDPessoa", IsForeignKey=true)]
		public Pessoa Pessoa
		{
			get
			{
				return this._Pessoa.Entity;
			}
			set
			{
				Pessoa previousValue = this._Pessoa.Entity;
				if (((previousValue != value) 
							|| (this._Pessoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pessoa.Entity = null;
						previousValue.Pedido.Remove(this);
					}
					this._Pessoa.Entity = value;
					if ((value != null))
					{
						value.Pedido.Add(this);
						this._IDPessoa = value.IDPessoa;
					}
					else
					{
						this._IDPessoa = default(int);
					}
					this.SendPropertyChanged("Pessoa");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Pedido", Storage="_Usuario", ThisKey="IDUsuario", OtherKey="IDUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Pedido.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Pedido.Add(this);
						this._IDUsuario = value.IDUsuario;
					}
					else
					{
						this._IDUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PedidoProduto(PedidoProduto entity)
		{
			this.SendPropertyChanging();
			entity.Pedido = this;
		}
		
		private void detach_PedidoProduto(PedidoProduto entity)
		{
			this.SendPropertyChanging();
			entity.Pedido = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PedidoProduto")]
	public partial class PedidoProduto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDProduto;
		
		private int _IDPedido;
		
		private int _IDCor;
		
		private int _IDTamanho;
		
		private decimal _Quantidade;
		
		private decimal _Preco;
		
		private decimal _Total;
		
		private string _Observacao;
		
		private EntityRef<Cor> _Cor;
		
		private EntityRef<Pedido> _Pedido;
		
		private EntityRef<Produto> _Produto;
		
		private EntityRef<Tamanho> _Tamanho;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDProdutoChanging(int value);
    partial void OnIDProdutoChanged();
    partial void OnIDPedidoChanging(int value);
    partial void OnIDPedidoChanged();
    partial void OnIDCorChanging(int value);
    partial void OnIDCorChanged();
    partial void OnIDTamanhoChanging(int value);
    partial void OnIDTamanhoChanged();
    partial void OnQuantidadeChanging(decimal value);
    partial void OnQuantidadeChanged();
    partial void OnPrecoChanging(decimal value);
    partial void OnPrecoChanged();
    partial void OnTotalChanging(decimal value);
    partial void OnTotalChanged();
    partial void OnObservacaoChanging(string value);
    partial void OnObservacaoChanged();
    #endregion
		
		public PedidoProduto()
		{
			this._Cor = default(EntityRef<Cor>);
			this._Pedido = default(EntityRef<Pedido>);
			this._Produto = default(EntityRef<Produto>);
			this._Tamanho = default(EntityRef<Tamanho>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDProduto
		{
			get
			{
				return this._IDProduto;
			}
			set
			{
				if ((this._IDProduto != value))
				{
					if (this._Produto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDProdutoChanging(value);
					this.SendPropertyChanging();
					this._IDProduto = value;
					this.SendPropertyChanged("IDProduto");
					this.OnIDProdutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPedido", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPedido
		{
			get
			{
				return this._IDPedido;
			}
			set
			{
				if ((this._IDPedido != value))
				{
					if (this._Pedido.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPedidoChanging(value);
					this.SendPropertyChanging();
					this._IDPedido = value;
					this.SendPropertyChanged("IDPedido");
					this.OnIDPedidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCor", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDCor
		{
			get
			{
				return this._IDCor;
			}
			set
			{
				if ((this._IDCor != value))
				{
					if (this._Cor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCorChanging(value);
					this.SendPropertyChanging();
					this._IDCor = value;
					this.SendPropertyChanged("IDCor");
					this.OnIDCorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTamanho", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDTamanho
		{
			get
			{
				return this._IDTamanho;
			}
			set
			{
				if ((this._IDTamanho != value))
				{
					if (this._Tamanho.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTamanhoChanging(value);
					this.SendPropertyChanging();
					this._IDTamanho = value;
					this.SendPropertyChanged("IDTamanho");
					this.OnIDTamanhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantidade", DbType="Decimal(18,2) NOT NULL")]
		public decimal Quantidade
		{
			get
			{
				return this._Quantidade;
			}
			set
			{
				if ((this._Quantidade != value))
				{
					this.OnQuantidadeChanging(value);
					this.SendPropertyChanging();
					this._Quantidade = value;
					this.SendPropertyChanged("Quantidade");
					this.OnQuantidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preco", DbType="Decimal(18,4) NOT NULL")]
		public decimal Preco
		{
			get
			{
				return this._Preco;
			}
			set
			{
				if ((this._Preco != value))
				{
					this.OnPrecoChanging(value);
					this.SendPropertyChanging();
					this._Preco = value;
					this.SendPropertyChanged("Preco");
					this.OnPrecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(18,4) NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Observacao", DbType="VarChar(100)")]
		public string Observacao
		{
			get
			{
				return this._Observacao;
			}
			set
			{
				if ((this._Observacao != value))
				{
					this.OnObservacaoChanging(value);
					this.SendPropertyChanging();
					this._Observacao = value;
					this.SendPropertyChanged("Observacao");
					this.OnObservacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cor_PedidoProduto", Storage="_Cor", ThisKey="IDCor", OtherKey="IDCor", IsForeignKey=true)]
		public Cor Cor
		{
			get
			{
				return this._Cor.Entity;
			}
			set
			{
				Cor previousValue = this._Cor.Entity;
				if (((previousValue != value) 
							|| (this._Cor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cor.Entity = null;
						previousValue.PedidoProduto.Remove(this);
					}
					this._Cor.Entity = value;
					if ((value != null))
					{
						value.PedidoProduto.Add(this);
						this._IDCor = value.IDCor;
					}
					else
					{
						this._IDCor = default(int);
					}
					this.SendPropertyChanged("Cor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pedido_PedidoProduto", Storage="_Pedido", ThisKey="IDPedido", OtherKey="IDPedido", IsForeignKey=true)]
		public Pedido Pedido
		{
			get
			{
				return this._Pedido.Entity;
			}
			set
			{
				Pedido previousValue = this._Pedido.Entity;
				if (((previousValue != value) 
							|| (this._Pedido.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pedido.Entity = null;
						previousValue.PedidoProduto.Remove(this);
					}
					this._Pedido.Entity = value;
					if ((value != null))
					{
						value.PedidoProduto.Add(this);
						this._IDPedido = value.IDPedido;
					}
					else
					{
						this._IDPedido = default(int);
					}
					this.SendPropertyChanged("Pedido");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_PedidoProduto", Storage="_Produto", ThisKey="IDProduto", OtherKey="IDProduto", IsForeignKey=true)]
		public Produto Produto
		{
			get
			{
				return this._Produto.Entity;
			}
			set
			{
				Produto previousValue = this._Produto.Entity;
				if (((previousValue != value) 
							|| (this._Produto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produto.Entity = null;
						previousValue.PedidoProduto.Remove(this);
					}
					this._Produto.Entity = value;
					if ((value != null))
					{
						value.PedidoProduto.Add(this);
						this._IDProduto = value.IDProduto;
					}
					else
					{
						this._IDProduto = default(int);
					}
					this.SendPropertyChanged("Produto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tamanho_PedidoProduto", Storage="_Tamanho", ThisKey="IDTamanho", OtherKey="IDTamanho", IsForeignKey=true)]
		public Tamanho Tamanho
		{
			get
			{
				return this._Tamanho.Entity;
			}
			set
			{
				Tamanho previousValue = this._Tamanho.Entity;
				if (((previousValue != value) 
							|| (this._Tamanho.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tamanho.Entity = null;
						previousValue.PedidoProduto.Remove(this);
					}
					this._Tamanho.Entity = value;
					if ((value != null))
					{
						value.PedidoProduto.Add(this);
						this._IDTamanho = value.IDTamanho;
					}
					else
					{
						this._IDTamanho = default(int);
					}
					this.SendPropertyChanged("Tamanho");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pessoa")]
	public partial class Pessoa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPessoa;
		
		private int _IDCidade;
		
		private bool _Status;
		
		private char _Tipo;
		
		private string _Nome_RazaoSocial;
		
		private string _Apelido_Fantasia;
		
		private string _CPF_CNPJ;
		
		private string _RG_InscricaoEstadual;
		
		private string _Endereco;
		
		private string _Bairro;
		
		private string _Numero;
		
		private string _Complemento;
		
		private string _Telefone;
		
		private string _Celular;
		
		private string _Email;
		
		private string _CEP;
		
		private EntitySet<Pedido> _Pedido;
		
		private EntitySet<Usuario> _Usuario;
		
		private EntityRef<Cidade> _Cidade;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPessoaChanging(int value);
    partial void OnIDPessoaChanged();
    partial void OnIDCidadeChanging(int value);
    partial void OnIDCidadeChanged();
    partial void OnStatusChanging(bool value);
    partial void OnStatusChanged();
    partial void OnTipoChanging(char value);
    partial void OnTipoChanged();
    partial void OnNome_RazaoSocialChanging(string value);
    partial void OnNome_RazaoSocialChanged();
    partial void OnApelido_FantasiaChanging(string value);
    partial void OnApelido_FantasiaChanged();
    partial void OnCPF_CNPJChanging(string value);
    partial void OnCPF_CNPJChanged();
    partial void OnRG_InscricaoEstadualChanging(string value);
    partial void OnRG_InscricaoEstadualChanged();
    partial void OnEnderecoChanging(string value);
    partial void OnEnderecoChanged();
    partial void OnBairroChanging(string value);
    partial void OnBairroChanged();
    partial void OnNumeroChanging(string value);
    partial void OnNumeroChanged();
    partial void OnComplementoChanging(string value);
    partial void OnComplementoChanged();
    partial void OnTelefoneChanging(string value);
    partial void OnTelefoneChanged();
    partial void OnCelularChanging(string value);
    partial void OnCelularChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCEPChanging(string value);
    partial void OnCEPChanged();
    #endregion
		
		public Pessoa()
		{
			this._Pedido = new EntitySet<Pedido>(new Action<Pedido>(this.attach_Pedido), new Action<Pedido>(this.detach_Pedido));
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			this._Cidade = default(EntityRef<Cidade>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPessoa", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDPessoa
		{
			get
			{
				return this._IDPessoa;
			}
			set
			{
				if ((this._IDPessoa != value))
				{
					this.OnIDPessoaChanging(value);
					this.SendPropertyChanging();
					this._IDPessoa = value;
					this.SendPropertyChanged("IDPessoa");
					this.OnIDPessoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCidade", DbType="Int NOT NULL")]
		public int IDCidade
		{
			get
			{
				return this._IDCidade;
			}
			set
			{
				if ((this._IDCidade != value))
				{
					if (this._Cidade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCidadeChanging(value);
					this.SendPropertyChanging();
					this._IDCidade = value;
					this.SendPropertyChanged("IDCidade");
					this.OnIDCidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit NOT NULL")]
		public bool Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="Char(1) NOT NULL")]
		public char Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome_RazaoSocial", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nome_RazaoSocial
		{
			get
			{
				return this._Nome_RazaoSocial;
			}
			set
			{
				if ((this._Nome_RazaoSocial != value))
				{
					this.OnNome_RazaoSocialChanging(value);
					this.SendPropertyChanging();
					this._Nome_RazaoSocial = value;
					this.SendPropertyChanged("Nome_RazaoSocial");
					this.OnNome_RazaoSocialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apelido_Fantasia", DbType="VarChar(100)")]
		public string Apelido_Fantasia
		{
			get
			{
				return this._Apelido_Fantasia;
			}
			set
			{
				if ((this._Apelido_Fantasia != value))
				{
					this.OnApelido_FantasiaChanging(value);
					this.SendPropertyChanging();
					this._Apelido_Fantasia = value;
					this.SendPropertyChanged("Apelido_Fantasia");
					this.OnApelido_FantasiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPF_CNPJ", DbType="VarChar(18)")]
		public string CPF_CNPJ
		{
			get
			{
				return this._CPF_CNPJ;
			}
			set
			{
				if ((this._CPF_CNPJ != value))
				{
					this.OnCPF_CNPJChanging(value);
					this.SendPropertyChanging();
					this._CPF_CNPJ = value;
					this.SendPropertyChanged("CPF_CNPJ");
					this.OnCPF_CNPJChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RG_InscricaoEstadual", DbType="VarChar(100)")]
		public string RG_InscricaoEstadual
		{
			get
			{
				return this._RG_InscricaoEstadual;
			}
			set
			{
				if ((this._RG_InscricaoEstadual != value))
				{
					this.OnRG_InscricaoEstadualChanging(value);
					this.SendPropertyChanging();
					this._RG_InscricaoEstadual = value;
					this.SendPropertyChanged("RG_InscricaoEstadual");
					this.OnRG_InscricaoEstadualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Endereco", DbType="VarChar(100)")]
		public string Endereco
		{
			get
			{
				return this._Endereco;
			}
			set
			{
				if ((this._Endereco != value))
				{
					this.OnEnderecoChanging(value);
					this.SendPropertyChanging();
					this._Endereco = value;
					this.SendPropertyChanged("Endereco");
					this.OnEnderecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bairro", DbType="VarChar(100)")]
		public string Bairro
		{
			get
			{
				return this._Bairro;
			}
			set
			{
				if ((this._Bairro != value))
				{
					this.OnBairroChanging(value);
					this.SendPropertyChanging();
					this._Bairro = value;
					this.SendPropertyChanged("Bairro");
					this.OnBairroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="VarChar(30)")]
		public string Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complemento", DbType="VarChar(50)")]
		public string Complemento
		{
			get
			{
				return this._Complemento;
			}
			set
			{
				if ((this._Complemento != value))
				{
					this.OnComplementoChanging(value);
					this.SendPropertyChanging();
					this._Complemento = value;
					this.SendPropertyChanged("Complemento");
					this.OnComplementoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefone", DbType="VarChar(20)")]
		public string Telefone
		{
			get
			{
				return this._Telefone;
			}
			set
			{
				if ((this._Telefone != value))
				{
					this.OnTelefoneChanging(value);
					this.SendPropertyChanging();
					this._Telefone = value;
					this.SendPropertyChanged("Telefone");
					this.OnTelefoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Celular", DbType="VarChar(20)")]
		public string Celular
		{
			get
			{
				return this._Celular;
			}
			set
			{
				if ((this._Celular != value))
				{
					this.OnCelularChanging(value);
					this.SendPropertyChanging();
					this._Celular = value;
					this.SendPropertyChanged("Celular");
					this.OnCelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEP", DbType="VarChar(10)")]
		public string CEP
		{
			get
			{
				return this._CEP;
			}
			set
			{
				if ((this._CEP != value))
				{
					this.OnCEPChanging(value);
					this.SendPropertyChanging();
					this._CEP = value;
					this.SendPropertyChanged("CEP");
					this.OnCEPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_Pedido", Storage="_Pedido", ThisKey="IDPessoa", OtherKey="IDPessoa")]
		public EntitySet<Pedido> Pedido
		{
			get
			{
				return this._Pedido;
			}
			set
			{
				this._Pedido.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_Usuario", Storage="_Usuario", ThisKey="IDPessoa", OtherKey="IDPessoa")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cidade_Pessoa", Storage="_Cidade", ThisKey="IDCidade", OtherKey="IDCidade", IsForeignKey=true)]
		public Cidade Cidade
		{
			get
			{
				return this._Cidade.Entity;
			}
			set
			{
				Cidade previousValue = this._Cidade.Entity;
				if (((previousValue != value) 
							|| (this._Cidade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cidade.Entity = null;
						previousValue.Pessoa.Remove(this);
					}
					this._Cidade.Entity = value;
					if ((value != null))
					{
						value.Pessoa.Add(this);
						this._IDCidade = value.IDCidade;
					}
					else
					{
						this._IDCidade = default(int);
					}
					this.SendPropertyChanged("Cidade");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pedido(Pedido entity)
		{
			this.SendPropertyChanging();
			entity.Pessoa = this;
		}
		
		private void detach_Pedido(Pedido entity)
		{
			this.SendPropertyChanging();
			entity.Pessoa = null;
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Pessoa = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Pessoa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Produto")]
	public partial class Produto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDProduto;
		
		private bool _Status;
		
		private string _Descricao;
		
		private string _Referencia;
		
		private EntitySet<PedidoProduto> _PedidoProduto;
		
		private EntitySet<ProdutoTamanho> _ProdutoTamanho;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDProdutoChanging(int value);
    partial void OnIDProdutoChanged();
    partial void OnStatusChanging(bool value);
    partial void OnStatusChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    partial void OnReferenciaChanging(string value);
    partial void OnReferenciaChanged();
    #endregion
		
		public Produto()
		{
			this._PedidoProduto = new EntitySet<PedidoProduto>(new Action<PedidoProduto>(this.attach_PedidoProduto), new Action<PedidoProduto>(this.detach_PedidoProduto));
			this._ProdutoTamanho = new EntitySet<ProdutoTamanho>(new Action<ProdutoTamanho>(this.attach_ProdutoTamanho), new Action<ProdutoTamanho>(this.detach_ProdutoTamanho));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDProduto
		{
			get
			{
				return this._IDProduto;
			}
			set
			{
				if ((this._IDProduto != value))
				{
					this.OnIDProdutoChanging(value);
					this.SendPropertyChanging();
					this._IDProduto = value;
					this.SendPropertyChanged("IDProduto");
					this.OnIDProdutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit NOT NULL")]
		public bool Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Referencia", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Referencia
		{
			get
			{
				return this._Referencia;
			}
			set
			{
				if ((this._Referencia != value))
				{
					this.OnReferenciaChanging(value);
					this.SendPropertyChanging();
					this._Referencia = value;
					this.SendPropertyChanged("Referencia");
					this.OnReferenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_PedidoProduto", Storage="_PedidoProduto", ThisKey="IDProduto", OtherKey="IDProduto")]
		public EntitySet<PedidoProduto> PedidoProduto
		{
			get
			{
				return this._PedidoProduto;
			}
			set
			{
				this._PedidoProduto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_ProdutoTamanho", Storage="_ProdutoTamanho", ThisKey="IDProduto", OtherKey="IDProduto")]
		public EntitySet<ProdutoTamanho> ProdutoTamanho
		{
			get
			{
				return this._ProdutoTamanho;
			}
			set
			{
				this._ProdutoTamanho.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PedidoProduto(PedidoProduto entity)
		{
			this.SendPropertyChanging();
			entity.Produto = this;
		}
		
		private void detach_PedidoProduto(PedidoProduto entity)
		{
			this.SendPropertyChanging();
			entity.Produto = null;
		}
		
		private void attach_ProdutoTamanho(ProdutoTamanho entity)
		{
			this.SendPropertyChanging();
			entity.Produto = this;
		}
		
		private void detach_ProdutoTamanho(ProdutoTamanho entity)
		{
			this.SendPropertyChanging();
			entity.Produto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProdutoTamanho")]
	public partial class ProdutoTamanho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDProduto;
		
		private int _IDTamanho;
		
		private System.Nullable<decimal> _Preco;
		
		private EntityRef<Produto> _Produto;
		
		private EntityRef<Tamanho> _Tamanho;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDProdutoChanging(int value);
    partial void OnIDProdutoChanged();
    partial void OnIDTamanhoChanging(int value);
    partial void OnIDTamanhoChanged();
    partial void OnPrecoChanging(System.Nullable<decimal> value);
    partial void OnPrecoChanged();
    #endregion
		
		public ProdutoTamanho()
		{
			this._Produto = default(EntityRef<Produto>);
			this._Tamanho = default(EntityRef<Tamanho>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDProduto
		{
			get
			{
				return this._IDProduto;
			}
			set
			{
				if ((this._IDProduto != value))
				{
					if (this._Produto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDProdutoChanging(value);
					this.SendPropertyChanging();
					this._IDProduto = value;
					this.SendPropertyChanged("IDProduto");
					this.OnIDProdutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTamanho", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDTamanho
		{
			get
			{
				return this._IDTamanho;
			}
			set
			{
				if ((this._IDTamanho != value))
				{
					if (this._Tamanho.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTamanhoChanging(value);
					this.SendPropertyChanging();
					this._IDTamanho = value;
					this.SendPropertyChanged("IDTamanho");
					this.OnIDTamanhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preco", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Preco
		{
			get
			{
				return this._Preco;
			}
			set
			{
				if ((this._Preco != value))
				{
					this.OnPrecoChanging(value);
					this.SendPropertyChanging();
					this._Preco = value;
					this.SendPropertyChanged("Preco");
					this.OnPrecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_ProdutoTamanho", Storage="_Produto", ThisKey="IDProduto", OtherKey="IDProduto", IsForeignKey=true)]
		public Produto Produto
		{
			get
			{
				return this._Produto.Entity;
			}
			set
			{
				Produto previousValue = this._Produto.Entity;
				if (((previousValue != value) 
							|| (this._Produto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produto.Entity = null;
						previousValue.ProdutoTamanho.Remove(this);
					}
					this._Produto.Entity = value;
					if ((value != null))
					{
						value.ProdutoTamanho.Add(this);
						this._IDProduto = value.IDProduto;
					}
					else
					{
						this._IDProduto = default(int);
					}
					this.SendPropertyChanged("Produto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tamanho_ProdutoTamanho", Storage="_Tamanho", ThisKey="IDTamanho", OtherKey="IDTamanho", IsForeignKey=true)]
		public Tamanho Tamanho
		{
			get
			{
				return this._Tamanho.Entity;
			}
			set
			{
				Tamanho previousValue = this._Tamanho.Entity;
				if (((previousValue != value) 
							|| (this._Tamanho.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tamanho.Entity = null;
						previousValue.ProdutoTamanho.Remove(this);
					}
					this._Tamanho.Entity = value;
					if ((value != null))
					{
						value.ProdutoTamanho.Add(this);
						this._IDTamanho = value.IDTamanho;
					}
					else
					{
						this._IDTamanho = default(int);
					}
					this.SendPropertyChanged("Tamanho");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tamanho")]
	public partial class Tamanho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTamanho;
		
		private bool _Status;
		
		private string _Descricao;
		
		private EntitySet<PedidoProduto> _PedidoProduto;
		
		private EntitySet<ProdutoTamanho> _ProdutoTamanho;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTamanhoChanging(int value);
    partial void OnIDTamanhoChanged();
    partial void OnStatusChanging(bool value);
    partial void OnStatusChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    #endregion
		
		public Tamanho()
		{
			this._PedidoProduto = new EntitySet<PedidoProduto>(new Action<PedidoProduto>(this.attach_PedidoProduto), new Action<PedidoProduto>(this.detach_PedidoProduto));
			this._ProdutoTamanho = new EntitySet<ProdutoTamanho>(new Action<ProdutoTamanho>(this.attach_ProdutoTamanho), new Action<ProdutoTamanho>(this.detach_ProdutoTamanho));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTamanho", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTamanho
		{
			get
			{
				return this._IDTamanho;
			}
			set
			{
				if ((this._IDTamanho != value))
				{
					this.OnIDTamanhoChanging(value);
					this.SendPropertyChanging();
					this._IDTamanho = value;
					this.SendPropertyChanged("IDTamanho");
					this.OnIDTamanhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit NOT NULL")]
		public bool Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tamanho_PedidoProduto", Storage="_PedidoProduto", ThisKey="IDTamanho", OtherKey="IDTamanho")]
		public EntitySet<PedidoProduto> PedidoProduto
		{
			get
			{
				return this._PedidoProduto;
			}
			set
			{
				this._PedidoProduto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tamanho_ProdutoTamanho", Storage="_ProdutoTamanho", ThisKey="IDTamanho", OtherKey="IDTamanho")]
		public EntitySet<ProdutoTamanho> ProdutoTamanho
		{
			get
			{
				return this._ProdutoTamanho;
			}
			set
			{
				this._ProdutoTamanho.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PedidoProduto(PedidoProduto entity)
		{
			this.SendPropertyChanging();
			entity.Tamanho = this;
		}
		
		private void detach_PedidoProduto(PedidoProduto entity)
		{
			this.SendPropertyChanging();
			entity.Tamanho = null;
		}
		
		private void attach_ProdutoTamanho(ProdutoTamanho entity)
		{
			this.SendPropertyChanging();
			entity.Tamanho = this;
		}
		
		private void detach_ProdutoTamanho(ProdutoTamanho entity)
		{
			this.SendPropertyChanging();
			entity.Tamanho = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDUsuario;
		
		private System.Nullable<int> _IDPessoa;
		
		private bool _Status;
		
		private string _Login;
		
		private string _Senha;
		
		private EntitySet<Pedido> _Pedido;
		
		private EntityRef<Pessoa> _Pessoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDUsuarioChanging(int value);
    partial void OnIDUsuarioChanged();
    partial void OnIDPessoaChanging(System.Nullable<int> value);
    partial void OnIDPessoaChanged();
    partial void OnStatusChanging(bool value);
    partial void OnStatusChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnSenhaChanging(string value);
    partial void OnSenhaChanged();
    #endregion
		
		public Usuario()
		{
			this._Pedido = new EntitySet<Pedido>(new Action<Pedido>(this.attach_Pedido), new Action<Pedido>(this.detach_Pedido));
			this._Pessoa = default(EntityRef<Pessoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDUsuario
		{
			get
			{
				return this._IDUsuario;
			}
			set
			{
				if ((this._IDUsuario != value))
				{
					this.OnIDUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IDUsuario = value;
					this.SendPropertyChanged("IDUsuario");
					this.OnIDUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPessoa", DbType="Int")]
		public System.Nullable<int> IDPessoa
		{
			get
			{
				return this._IDPessoa;
			}
			set
			{
				if ((this._IDPessoa != value))
				{
					if (this._Pessoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPessoaChanging(value);
					this.SendPropertyChanging();
					this._IDPessoa = value;
					this.SendPropertyChanged("IDPessoa");
					this.OnIDPessoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit NOT NULL")]
		public bool Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Senha", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Senha
		{
			get
			{
				return this._Senha;
			}
			set
			{
				if ((this._Senha != value))
				{
					this.OnSenhaChanging(value);
					this.SendPropertyChanging();
					this._Senha = value;
					this.SendPropertyChanged("Senha");
					this.OnSenhaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Pedido", Storage="_Pedido", ThisKey="IDUsuario", OtherKey="IDUsuario")]
		public EntitySet<Pedido> Pedido
		{
			get
			{
				return this._Pedido;
			}
			set
			{
				this._Pedido.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_Usuario", Storage="_Pessoa", ThisKey="IDPessoa", OtherKey="IDPessoa", IsForeignKey=true)]
		public Pessoa Pessoa
		{
			get
			{
				return this._Pessoa.Entity;
			}
			set
			{
				Pessoa previousValue = this._Pessoa.Entity;
				if (((previousValue != value) 
							|| (this._Pessoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pessoa.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Pessoa.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._IDPessoa = value.IDPessoa;
					}
					else
					{
						this._IDPessoa = default(Nullable<int>);
					}
					this.SendPropertyChanged("Pessoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pedido(Pedido entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Pedido(Pedido entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
}
#pragma warning restore 1591
